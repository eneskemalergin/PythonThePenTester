
"""
Secure Shell (SSH), sometimes known as Secure Socket Shell, 
is a UNIX-based command interface and protocol for securely 
getting access to a remote computer. It is widely used by network 
administrators to control Web and other kinds of servers remotely.
"""


# Interacting with SHH with Pexpect

""" SHH clients require user interaction. Meaning that;
our script must wait for the confirmation about RSA key fingerprint.
"""

# First install pexpect with pip install pexpect

import pexpect
PROMPT = ['#', '>>>', '>', '\$']
def send_command(child, cmd):
	child.sendline(cmd)
	child.expect(PROMPT)
	print(child.before)

# 3 Expected cases are possible:
	# a timeout
	# message about host has a new public key
	# a password prompt
# Takes 3 parameters and returns an SSh connection result
def connect(user, host, password):
	# Creating initial key value to use for ssh connection
	ssh_newkey = "Are you sure want to continue connecting"
	connectionStr = 'ssh '+ user + '@'+ host
	child = pexpect.spawn(connectionStr)
	ret = child.expect([pexpect.TIMEOUT, ssh_newkey, '[P|p]assword: '])

	if ret == 0:
		print('[-] Error Connecting')
		return 
	if ret == 1:
		child.sendline('yes')
	ret = child.expect([pexpect.TIMEOUT, '[P|p]assword: '])
	if ret == 0:
		print('[-] Error Connecting')
		return 
	child.sendline(password)
	child.expect(PROMPT)
	return child
def main():
	# Just initializing variables with dummy values
	host = 'localhost'
	user = 'root'
	password = 'toor'
	child = connect(user, host, password)
	send_command(child, 'cat /etc/shadow | grep root')

if __name__ == '__main__':
	main()